<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="assignment-1-suite.xml" />
	<munit:test name="assignment-1Flow-test" doc:id="4f5497ef-8110-4834-8674-5059cd11f718" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Select" doc:id="56a1aca2-1ea9-4a67-b64e-43e90c74ae1c" processor="db:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="d6c42416-07d6-43ec-b767-de1cfc9ed141" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://assignment1Flowtest\mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="5b8a37ec-0902-4dc2-8a32-3ed9c188e125" >
				<munit:payload value="#[readUrl('classpath://assignment1Flowtest\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://assignment1Flowtest\set-event_attributes.dwl')]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to assignment-1Flow" doc:id="84b48a88-da55-498d-86b5-482bf2d69cc3" name="assignment-1Flow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="5a4538dd-0a1e-4f7f-995a-28b8389dbcd8" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import assignment1Flowtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="assignment-1Flow1-test" doc:id="445645d1-2ce7-4bc9-b32f-c242f885e3f9" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Insert" doc:id="362cc88a-28f5-4f41-8006-d632c29ddc51" processor="db:insert">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="3b1d3ac8-f934-45be-8a6a-741067688888" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://assignment1Flow1test\mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="71f1a864-2366-45f2-a5f4-5cb89c859d29" >
				<munit:payload value="#[readUrl('classpath://assignment1Flow1test\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://assignment1Flow1test\set-event_attributes.dwl')]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to assignment-1Flow1" doc:id="ffada019-4d8a-49f9-8e43-2a49b810059b" name="assignment-1Flow1"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="fd379eb3-b36b-44fc-affe-65e1b4d7cb5f" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import assignment1Flow1test::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>


</mule>
